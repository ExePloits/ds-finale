local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ExePloits|DS Remake",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "ExePloits",
   LoadingSubtitle = "by Sonic",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   Color = Color3.fromRGB(128, 0, 128),  -- Purple color

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ExePloits|DS Remake",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "ExePloits",
   LoadingSubtitle = "by Sonic",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   Color = Color3.fromRGB(128, 0, 128),  -- Purple color

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ExePloits|DS Remake",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "ExePloits",
   LoadingSubtitle = "by Sonic",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   Color = Color3.fromRGB(128, 0, 128),  -- Purple color

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ExePloits|DS Remake",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "ExePloits",
   LoadingSubtitle = "by Sonic",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   Color = Color3.fromRGB(128, 0, 128),  -- Purple color

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local PlayerTab = Window:CreateTab("Isotopo Esp Event", 4483362458) -- Title, Image

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local colorGreen = Color3.fromRGB(0, 255, 0)
local espSize = Vector3.new(10, 10, 10) -- Large size for ESP indicators
local IsotoESPEnabled = false -- Initial state

-- Function to create ESP for Isotope item
local function createESP()
    local isotoItem = game.Workspace:FindFirstChild("Isotope")
    if isotoItem and isotoItem:IsA("BasePart") then
        local espBox = Instance.new("BoxHandleAdornment")
        espBox.Adornee = isotoItem
        espBox.Size = espSize
        espBox.Color3 = colorGreen
        espBox.Transparency = 0.5
        espBox.AlwaysOnTop = true
        espBox.ZIndex = 1
        espBox.Parent = isotoItem

        print("ESP created for Isotope item:", isotoItem.Name)
    else
        print("Isotope item not found in Workspace.")
    end
end

-- Function to remove existing ESP
local function removeESP()
    local isotoItem = game.Workspace:FindFirstChild("Isotope")
    if isotoItem then
        for _, child in ipairs(isotoItem:GetChildren()) do
            if child:IsA("BoxHandleAdornment") then
                child:Destroy()
                print("ESP removed for item:", isotoItem.Name)
            end
        end
    else
        print("Isotope item not found in Workspace.")
    end
end

-- Toggle setup for ESP
local Toggle = PlayerTab:CreateToggle({
    Name = "Isotope ESP",
    CurrentValue = false,
    Flag = "ToggleIsotopeESP", -- Ensure a unique flag for saving configurations
    Callback = function(Value)
        IsotoESPEnabled = Value
        if Value then
            createESP()
            print("Isotope ESP enabled.")
        else
            removeESP()
            print("Isotope ESP disabled.")
        end
    end,
})

-- Monitor for new Isotope items spawning
RunService.Heartbeat:Connect(function()
    if IsotoESPEnabled then
        createESP()
    end
end)

print("Isotope ESP script with toggle is ready.")
